{
  "stats": {
    "suites": 32,
    "tests": 42,
    "passes": 42,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-11T11:57:26.190Z",
    "end": "2020-06-11T11:57:26.315Z",
    "duration": 125,
    "testsRegistered": 42,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e03dffc-3d3c-4daa-a6ba-37b7ede3b067",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3fdde50-44f5-4a31-a373-0009bafa17b0",
          "title": "Books with expect API",
          "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-expect.spec.js",
          "file": "/test/books-chai-expect.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3d8cc4a0-2a16-4f7e-aa9e-baf342572edb",
              "title": "GET /api/books",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-expect.spec.js",
              "file": "/test/books-chai-expect.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET all the books",
                  "fullTitle": "Books with expect API GET /api/books it should GET all the books",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get(\"/api/books\")\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.a('array');\n        expect(res.body).to.have.lengthOf.above(1);\n        done();\n    });",
                  "err": {},
                  "uuid": "28a7822a-7c3e-41a8-8de9-8d00483841d8",
                  "parentUUID": "3d8cc4a0-2a16-4f7e-aa9e-baf342572edb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not GET all the books",
                  "fullTitle": "Books with expect API GET /api/books it should not GET all the books",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get(\"/api/book\")\n    .end((err, res) => {\n        expect(res).to.have.status(404);\n        expect(res.body).to.be.an('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "7b7a5f97-ca0d-4637-879d-813843fc5139",
                  "parentUUID": "3d8cc4a0-2a16-4f7e-aa9e-baf342572edb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28a7822a-7c3e-41a8-8de9-8d00483841d8",
                "7b7a5f97-ca0d-4637-879d-813843fc5139"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ef92301-d5f2-440b-9c62-a46595151cc1",
              "title": "POST /api/books",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-expect.spec.js",
              "file": "/test/books-chai-expect.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST a new book",
                  "fullTitle": "Books with expect API POST /api/books it should POST a new book",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const book = {\n    // id: 1,\n    title: \"Head First Python\",\n    author: \"Paul Barry\",\n    year: 2016,\n    pages: 624\n};\nchai.request(app)\n    .post(\"/api/books\")\n    .send(book)\n    .end((err, res) => {\n        expect(res).to.have.status(201);\n        expect(res.body).to.be.a('object');\n        expect(res.body).to.have.property('id').above(1);\n        expect(res.body).to.have.property('title');\n        expect(res.body).to.have.property('author');\n        expect(res.body).to.have.property('year');\n        expect(res.body).to.have.property('pages');\n        chai.request(app)\n            .get(`/api/books/${res.body.id}`)\n            .end((err2, res2) => {\n                expect(res2).to.have.status(200);\n                expect(res2.body).to.be.a('object');\n                expect(res2.body).to.deep.equal({ id: res.body.id, ...book });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "50055fdd-b313-4c46-800e-bf4607e8ab97",
                  "parentUUID": "6ef92301-d5f2-440b-9c62-a46595151cc1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a new book without pages field",
                  "fullTitle": "Books with expect API POST /api/books it should NOT POST a new book without pages field",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const book = {\n    title: \"Head First Learn to Code\",\n    author: \"Eric Freeman\",\n    year: 2018\n};\nchai.request(app)\n    .post(\"/api/books\")\n    .send(book)\n    .end((err, res) => {\n        expect(res).to.have.status(400);\n        expect(res.text).to.equal(`\"pages\" is required`);\n        done();\n    });",
                  "err": {},
                  "uuid": "3d153dbd-9e57-4b9e-aab9-1387c4eac418",
                  "parentUUID": "6ef92301-d5f2-440b-9c62-a46595151cc1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50055fdd-b313-4c46-800e-bf4607e8ab97",
                "3d153dbd-9e57-4b9e-aab9-1387c4eac418"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0dd3e0f2-f010-47e3-afbd-32d53ee14718",
              "title": "GET /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-expect.spec.js",
              "file": "/test/books-chai-expect.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET a book by the given id",
                  "fullTitle": "Books with expect API GET /api/books/:id it should GET a book by the given id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nchai.request(app)\n    .get(`/api/books/${bookId}`)\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.a('object');\n        expect(res.body).to.have.property('id').equal(bookId);\n        expect(res.body).to.have.property('title').that.is.a('string');\n        expect(res.body).to.have.property('author').that.is.an('string');\n        expect(res.body).to.have.property('year').that.is.a('number');\n        expect(res.body).to.have.property('pages').that.is.an('number');\n        done();\n    });",
                  "err": {},
                  "uuid": "63811e67-0b7f-413e-b1f4-40e40592a65b",
                  "parentUUID": "0dd3e0f2-f010-47e3-afbd-32d53ee14718",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT GET a book by the given id",
                  "fullTitle": "Books with expect API GET /api/books/:id it should NOT GET a book by the given id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 38;\nchai.request(app)\n    .get(`/api/books/${bookId}`)\n    .end((err, res) => {\n        expect(res).to.have.status(404);\n        expect(res.body).to.be.a('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "b2f74dfb-efd4-4d63-850f-0a522e0947ea",
                  "parentUUID": "0dd3e0f2-f010-47e3-afbd-32d53ee14718",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63811e67-0b7f-413e-b1f4-40e40592a65b",
                "b2f74dfb-efd4-4d63-850f-0a522e0947ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a00d0c8b-8de0-4595-962c-6131ebafd007",
              "title": "PUT /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-expect.spec.js",
              "file": "/test/books-chai-expect.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should REPLACE a book given the id",
                  "fullTitle": "Books with expect API PUT /api/books/:id it should REPLACE a book given the id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nconst book = {\n    // id: 1,\n    title: \"Head First C\",\n    author: \"David Griffiths, Dawn Griffiths\",\n    year: 2012,\n    pages: 632\n};\nchai.request(app)\n    .put(`/api/books/${bookId}`)\n    .send(book)\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.a('object');\n        expect(res.body).to.deep.equal({ id: bookId, ...book });\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .end((err2, res2) => {\n                expect(res2).to.have.status(200);\n                expect(res2.body).to.be.a('object');\n                expect(res2.body).to.deep.equal({ id: bookId, ...book });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "df941a79-3242-4d8f-99fb-2a620b525be2",
                  "parentUUID": "a00d0c8b-8de0-4595-962c-6131ebafd007",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df941a79-3242-4d8f-99fb-2a620b525be2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b522d633-18e4-4e03-982d-e3d1835435b4",
              "title": "PATCH /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-expect.spec.js",
              "file": "/test/books-chai-expect.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should UPDATE a book given the id",
                  "fullTitle": "Books with expect API PATCH /api/books/:id it should UPDATE a book given the id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nconst book = {\n    // id: 1,\n    title: \"Head First C\",\n    author: \"David Griffiths, Dawn Griffiths\",\n    year: 2012,\n    pages: 632\n};\nchai.request(app)\n    .patch(`/api/books/${bookId}`)\n    .send(book)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: bookId, ...book });\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: bookId, ...book });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "13a2c072-e1a2-49bb-ba37-8ea20e2d861a",
                  "parentUUID": "b522d633-18e4-4e03-982d-e3d1835435b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13a2c072-e1a2-49bb-ba37-8ea20e2d861a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64fc503a-3c49-47da-9a31-f4f7e115a27e",
          "title": "Books API",
          "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
          "file": "/test/books-chai-should.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "621331dd-3b26-4d76-945f-7c92106d94ea",
              "title": "GET /api/books",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
              "file": "/test/books-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET all the books",
                  "fullTitle": "Books API GET /api/books it should GET all the books",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get(\"/api/books\")\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('array');\n        // res.body.length.should.be.eql(4);\n        //or\n        res.body.should.have.length(5);\n        done();\n    });",
                  "err": {},
                  "uuid": "defd8aa2-5223-46cb-b78e-e8ab447ec49f",
                  "parentUUID": "621331dd-3b26-4d76-945f-7c92106d94ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not GET all the books",
                  "fullTitle": "Books API GET /api/books it should not GET all the books",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get(\"/api/book\")\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "f1c250ae-f99a-4735-82bb-02374429bd88",
                  "parentUUID": "621331dd-3b26-4d76-945f-7c92106d94ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "defd8aa2-5223-46cb-b78e-e8ab447ec49f",
                "f1c250ae-f99a-4735-82bb-02374429bd88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5b0013c5-3a4c-44bf-a9de-1cbfc6bc3459",
              "title": "POST /api/books",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
              "file": "/test/books-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST a new book",
                  "fullTitle": "Books API POST /api/books it should POST a new book",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const book = {\n    // id: 1,\n    title: \"Head First Python\",\n    author: \"Paul Barry\",\n    year: 2016,\n    pages: 624\n};\nchai.request(app)\n    .post(\"/api/books\")\n    .send(book)\n    .end((err, res) => {\n        res.should.have.status(201);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').above(1);\n        res.body.should.have.property('title');\n        res.body.should.have.property('author');\n        res.body.should.have.property('year');\n        res.body.should.have.property('pages');\n        chai.request(app)\n            .get(`/api/books/${res.body.id}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: res.body.id, ...book });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "42ca512b-3e8e-48be-b9d8-67b2dd6a2de0",
                  "parentUUID": "5b0013c5-3a4c-44bf-a9de-1cbfc6bc3459",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a new book without pages field",
                  "fullTitle": "Books API POST /api/books it should NOT POST a new book without pages field",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const book = {\n    title: \"Head First Learn to Code\",\n    author: \"Eric Freeman\",\n    year: 2018\n};\nchai.request(app)\n    .post(\"/api/books\")\n    .send(book)\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.text.should.be.equal(`\"pages\" is required`);\n        done();\n    });",
                  "err": {},
                  "uuid": "01809db5-c41a-4b00-96dd-688e85dfe216",
                  "parentUUID": "5b0013c5-3a4c-44bf-a9de-1cbfc6bc3459",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42ca512b-3e8e-48be-b9d8-67b2dd6a2de0",
                "01809db5-c41a-4b00-96dd-688e85dfe216"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2aea3b3d-c541-4f76-a934-ea6d9fafbe18",
              "title": "GET /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
              "file": "/test/books-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET a book by the given id",
                  "fullTitle": "Books API GET /api/books/:id it should GET a book by the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nchai.request(app)\n    .get(`/api/books/${bookId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').eql(bookId);\n        res.body.should.have.property('title');\n        res.body.should.have.property('author');\n        res.body.should.have.property('year');\n        res.body.should.have.property('pages');\n        done();\n    });",
                  "err": {},
                  "uuid": "20402ebe-5679-4591-a507-4ec09583e690",
                  "parentUUID": "2aea3b3d-c541-4f76-a934-ea6d9fafbe18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT GET a book by the given id",
                  "fullTitle": "Books API GET /api/books/:id it should NOT GET a book by the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 38;\nchai.request(app)\n    .get(`/api/books/${bookId}`)\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "250f0ba7-ba92-4766-be5c-8b767f652588",
                  "parentUUID": "2aea3b3d-c541-4f76-a934-ea6d9fafbe18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20402ebe-5679-4591-a507-4ec09583e690",
                "250f0ba7-ba92-4766-be5c-8b767f652588"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c57a7145-8247-47a7-a6a2-8071434844e7",
              "title": "PUT /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
              "file": "/test/books-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should REPLACE a book given the id",
                  "fullTitle": "Books API PUT /api/books/:id it should REPLACE a book given the id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nconst book = {\n    // id: 1,\n    title: \"Head First C\",\n    author: \"David Griffiths, Dawn Griffiths\",\n    year: 2012,\n    pages: 632\n};\nchai.request(app)\n    .put(`/api/books/${bookId}`)\n    .send(book)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: bookId, ...book });\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: bookId, ...book });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "43dc9b92-0982-4f6d-8a88-df7878694aaf",
                  "parentUUID": "c57a7145-8247-47a7-a6a2-8071434844e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43dc9b92-0982-4f6d-8a88-df7878694aaf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cb679346-8d05-4037-b07e-a438046cfa6c",
              "title": "PATCH /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
              "file": "/test/books-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should UPDATE a book given the id",
                  "fullTitle": "Books API PATCH /api/books/:id it should UPDATE a book given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nconst book = {\n    // id: 1,\n    title: \"Head First C\",\n    author: \"David Griffiths, Dawn Griffiths\",\n    year: 2012,\n    pages: 632\n};\nchai.request(app)\n    .patch(`/api/books/${bookId}`)\n    .send(book)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: bookId, ...book });\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: bookId, ...book });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "08d5189a-ead2-46c3-bbd2-503d1dd8f78a",
                  "parentUUID": "cb679346-8d05-4037-b07e-a438046cfa6c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08d5189a-ead2-46c3-bbd2-503d1dd8f78a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "af9aec26-99a0-4485-a414-c9475e8092b0",
              "title": "DELETE /api/books/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/books-chai-should.spec.js",
              "file": "/test/books-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should DELETE a book given the id",
                  "fullTitle": "Books API DELETE /api/books/:id it should DELETE a book given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bookId = 1;\nchai.request(app)\n    .delete(`/api/books/${bookId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a(\"object\");\n        chai.request(app)\n            .get(`/api/books/${bookId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(404);\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "19af2735-33bd-427c-b717-36357ee3eab8",
                  "parentUUID": "af9aec26-99a0-4485-a414-c9475e8092b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19af2735-33bd-427c-b717-36357ee3eab8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "311a50a5-8634-4d48-885f-fb743bfb684c",
          "title": "Customers API",
          "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/customers-chai-should.spec.js",
          "file": "/test/customers-chai-should.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Customers API \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester = chai.request(app).keepOpen();",
              "err": {},
              "uuid": "eedc8e18-6454-468d-a8f2-be77c1885edf",
              "parentUUID": "311a50a5-8634-4d48-885f-fb743bfb684c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Customers API \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester.close();",
              "err": {},
              "uuid": "f43e0336-baf9-4514-a97b-2cd2925990be",
              "parentUUID": "311a50a5-8634-4d48-885f-fb743bfb684c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "62d8fc1f-2696-44a4-b430-bfd6177d3f57",
              "title": "GET /api/customers",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/customers-chai-should.spec.js",
              "file": "/test/customers-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET all the customers",
                  "fullTitle": "Customers API GET /api/customers it should GET all the customers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "requester\n    .get(\"/api/customers\")\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('array');\n        res.body.length.should.be.above(1);\n        done();\n    });",
                  "err": {},
                  "uuid": "59d39409-2f38-4a80-a5ff-8f00d5ba249a",
                  "parentUUID": "62d8fc1f-2696-44a4-b430-bfd6177d3f57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not GET all the customers",
                  "fullTitle": "Customers API GET /api/customers it should not GET all the customers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "requester\n    .get(\"/api/customer\")\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({});\n        done();\n    });",
                  "err": {},
                  "uuid": "9cdd8b16-d376-4a58-be57-b073e9a66387",
                  "parentUUID": "62d8fc1f-2696-44a4-b430-bfd6177d3f57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59d39409-2f38-4a80-a5ff-8f00d5ba249a",
                "9cdd8b16-d376-4a58-be57-b073e9a66387"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c9e3e3c-270e-4413-a113-e65584810b36",
              "title": "POST /api/customers",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/customers-chai-should.spec.js",
              "file": "/test/customers-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST a new customer",
                  "fullTitle": "Customers API POST /api/customers it should POST a new customer",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const customer = {\n    // id: 1,\n    firstName: \"Haydar\",\n    lastName: \"Bas\",\n    age: 55\n};\nrequester\n    .post(\"/api/customers\")\n    .send(customer)\n    .end((err, res) => {\n        res.should.have.status(201);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').above(1);\n        res.body.should.have.property('firstName');\n        res.body.should.have.property('lastName');\n        res.body.should.have.property('age');\n        requester\n            .get(`/api/customers/${res.body.id}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal(res.body);\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "e9222fb9-8c8f-445b-a8ae-5435d9366f79",
                  "parentUUID": "1c9e3e3c-270e-4413-a113-e65584810b36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a new customer without age field",
                  "fullTitle": "Customers API POST /api/customers it should NOT POST a new customer without age field",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const customer = {\n    // id: 1,\n    firstName: \"Kadir\",\n    lastName: \"Tatar\"\n};\nrequester\n    .post(\"/api/customers\")\n    .send(customer)\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.text.should.be.equal(`\"age\" is required`)\n        done();\n    });",
                  "err": {},
                  "uuid": "23e6e03f-f47e-4276-a199-3eceff53c245",
                  "parentUUID": "1c9e3e3c-270e-4413-a113-e65584810b36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9222fb9-8c8f-445b-a8ae-5435d9366f79",
                "23e6e03f-f47e-4276-a199-3eceff53c245"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a7159414-6209-4b39-9990-f13d46e8adbe",
              "title": "GET /api/customers/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/customers-chai-should.spec.js",
              "file": "/test/customers-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET a customer by the given id",
                  "fullTitle": "Customers API GET /api/customers/:id it should GET a customer by the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const customerId = 1;\nrequester\n    .get(`/api/customers/${customerId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').eql(customerId);\n        res.body.should.have.property('firstName');\n        res.body.should.have.property('lastName');\n        res.body.should.have.property('age');\n        done();\n    });",
                  "err": {},
                  "uuid": "8f58c80d-2ec8-47be-86bc-7503e4d7b3b5",
                  "parentUUID": "a7159414-6209-4b39-9990-f13d46e8adbe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT GET a customer by the given id",
                  "fullTitle": "Customers API GET /api/customers/:id it should NOT GET a customer by the given id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const customerId = 38;\nrequester\n    .get(`/api/customers/${customerId}`)\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "838fd759-d79c-4364-b533-e97338e8d159",
                  "parentUUID": "a7159414-6209-4b39-9990-f13d46e8adbe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f58c80d-2ec8-47be-86bc-7503e4d7b3b5",
                "838fd759-d79c-4364-b533-e97338e8d159"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ba58f2e5-a4a9-4ded-9a81-a4e4ba3311dd",
              "title": "PUT /api/customers/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/customers-chai-should.spec.js",
              "file": "/test/customers-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should REPLACE a customer given the id",
                  "fullTitle": "Customers API PUT /api/customers/:id it should REPLACE a customer given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const customerId = 1;\nconst customer = {\n    // id: 1,\n    firstName: \"Yakup\",\n    lastName: \"Balta\",\n    age: 37\n};\nrequester\n    .put(`/api/customers/${customerId}`)\n    .send(customer)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: customerId, ...customer });\n        requester\n            .get(`/api/customers/${customerId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: customerId, ...res.body });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "124d470a-0bf1-4ebc-9bf1-41ed6a8a685b",
                  "parentUUID": "ba58f2e5-a4a9-4ded-9a81-a4e4ba3311dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "124d470a-0bf1-4ebc-9bf1-41ed6a8a685b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2d1d2126-fca4-4011-b02f-03f737d2da18",
              "title": "DELETE /api/customers/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/customers-chai-should.spec.js",
              "file": "/test/customers-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should DELETE a customer given the id",
                  "fullTitle": "Customers API DELETE /api/customers/:id it should DELETE a customer given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const customerId = 1;\nrequester\n    .delete(`/api/customers/${customerId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a(\"object\");\n        requester\n            .get(`/api/customers/${customerId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(404);\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "bdfd5bdf-b904-4708-8f51-8652f1a39744",
                  "parentUUID": "2d1d2126-fca4-4011-b02f-03f737d2da18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bdfd5bdf-b904-4708-8f51-8652f1a39744"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd2591f1-d9b5-41e5-9fd2-5cfe489ec160",
          "title": "Tasks API",
          "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
          "file": "/test/tasks-chai-should.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Tasks API \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester = chai.request(app).keepOpen();",
              "err": {},
              "uuid": "89198fb3-d586-414d-a229-03e88a7566dc",
              "parentUUID": "bd2591f1-d9b5-41e5-9fd2-5cfe489ec160",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Tasks API \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester.close();",
              "err": {},
              "uuid": "32060df9-8a60-47c6-8a12-966cbef4130b",
              "parentUUID": "bd2591f1-d9b5-41e5-9fd2-5cfe489ec160",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "71070148-e845-4468-bd4b-59bbb139b374",
              "title": "GET /api/tasks",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
              "file": "/test/tasks-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET all the tasks",
                  "fullTitle": "Tasks API GET /api/tasks it should GET all the tasks",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "requester\n    .get(\"/api/tasks\")\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('array');\n        res.body.length.should.be.above(1);\n        done();\n    });",
                  "err": {},
                  "uuid": "ee35ed51-e694-46dc-9337-79a522e69103",
                  "parentUUID": "71070148-e845-4468-bd4b-59bbb139b374",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not GET all the tasks",
                  "fullTitle": "Tasks API GET /api/tasks it should not GET all the tasks",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "requester\n    .get(\"/api/task\")\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({});\n        done();\n    });",
                  "err": {},
                  "uuid": "5fdffbd7-ad8e-45f5-9eff-18a7ef7a574b",
                  "parentUUID": "71070148-e845-4468-bd4b-59bbb139b374",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee35ed51-e694-46dc-9337-79a522e69103",
                "5fdffbd7-ad8e-45f5-9eff-18a7ef7a574b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "95666027-f342-45cb-805c-aeaa877fe0ea",
              "title": "POST /api/tasks",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
              "file": "/test/tasks-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST a new task",
                  "fullTitle": "Tasks API POST /api/tasks it should POST a new task",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const task = {\n    // id: 1,\n    name: \"Task 4\",\n    completed: false\n};\nrequester\n    .post(\"/api/tasks\")\n    .send(task)\n    .end((err, res) => {\n        res.should.have.status(201);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').above(1);\n        res.body.should.have.property('name');\n        res.body.should.have.property('completed').equal(false);\n        requester\n            .get(`/api/tasks/${res.body.id}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: res.body.id, ...task });\n                done();\n            })\n    });",
                  "err": {},
                  "uuid": "d3a168b7-98eb-418f-88be-cfbf85847743",
                  "parentUUID": "95666027-f342-45cb-805c-aeaa877fe0ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a new task without completed field",
                  "fullTitle": "Tasks API POST /api/tasks it should NOT POST a new task without completed field",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const task = {\n    name: \"Task 5\"\n};\nrequester\n    .post(\"/api/tasks\")\n    .send(task)\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.text.should.be.equal(`\"completed\" is required`)\n        done();\n    });",
                  "err": {},
                  "uuid": "e03f1d06-ae3a-46cb-b1e6-a01fabef0f45",
                  "parentUUID": "95666027-f342-45cb-805c-aeaa877fe0ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3a168b7-98eb-418f-88be-cfbf85847743",
                "e03f1d06-ae3a-46cb-b1e6-a01fabef0f45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3710c4f7-dca7-4bd2-9190-a41004d3fbef",
              "title": "GET /api/tasks/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
              "file": "/test/tasks-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET a task by the given id",
                  "fullTitle": "Tasks API GET /api/tasks/:id it should GET a task by the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nrequester\n    .get(`/api/tasks/${taskId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').eql(taskId);\n        res.body.should.have.property('name');\n        res.body.should.have.property('completed');\n        done();\n    });",
                  "err": {},
                  "uuid": "6d30b696-f292-4569-a93a-203c71d2696c",
                  "parentUUID": "3710c4f7-dca7-4bd2-9190-a41004d3fbef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT GET a task by the given id",
                  "fullTitle": "Tasks API GET /api/tasks/:id it should NOT GET a task by the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 38;\nrequester\n    .get(`/api/tasks/${taskId}`)\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "f8b3ea2c-e0f6-468f-9309-5c214d7674f5",
                  "parentUUID": "3710c4f7-dca7-4bd2-9190-a41004d3fbef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d30b696-f292-4569-a93a-203c71d2696c",
                "f8b3ea2c-e0f6-468f-9309-5c214d7674f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a55b6b01-378a-4fbb-97f0-83a3f78076f1",
              "title": "PUT /api/tasks/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
              "file": "/test/tasks-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should REPLACE a task given the id",
                  "fullTitle": "Tasks API PUT /api/tasks/:id it should REPLACE a task given the id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nconst task = {\n    // id: 1,\n    name: \"Task 4\",\n    completed: false\n};\nrequester\n    .put(`/api/tasks/${taskId}`)\n    .send(task)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: taskId, ...task });\n        done();\n    });",
                  "err": {},
                  "uuid": "019b76a9-a2e5-4a9e-b94e-37462b55084e",
                  "parentUUID": "a55b6b01-378a-4fbb-97f0-83a3f78076f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "019b76a9-a2e5-4a9e-b94e-37462b55084e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "58dec325-01e1-497c-88cd-70c708f86438",
              "title": "PATCH /api/tasks/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
              "file": "/test/tasks-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should UPDATE a task given the id",
                  "fullTitle": "Tasks API PATCH /api/tasks/:id it should UPDATE a task given the id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nconst task = {\n    // id: 1,\n    name: \"Task 4\",\n    completed: false\n};\nrequester\n    .patch(`/api/tasks/${taskId}`)\n    .send(task)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: taskId, ...task });\n        requester\n            .get(`/api/tasks/${taskId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: taskId, ...res.body });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "401908c4-c93c-42d1-96fd-1b8f88bb69df",
                  "parentUUID": "58dec325-01e1-497c-88cd-70c708f86438",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "401908c4-c93c-42d1-96fd-1b8f88bb69df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "89441ac0-aebf-4a60-9a55-c6005df5ce3a",
              "title": "DELETE /api/tasks/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/tasks-chai-should.spec.js",
              "file": "/test/tasks-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should DELETE a task given the id",
                  "fullTitle": "Tasks API DELETE /api/tasks/:id it should DELETE a task given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const taskId = 1;\nrequester\n    .delete(`/api/tasks/${taskId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a(\"object\");\n        requester\n            .get(`/api/tasks/${taskId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(404);\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "1ec30758-680c-439a-9918-89ae3b85e28d",
                  "parentUUID": "89441ac0-aebf-4a60-9a55-c6005df5ce3a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ec30758-680c-439a-9918-89ae3b85e28d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9531e2b8-eaa2-4c7c-a4bf-327a6c1f4a6e",
          "title": "Users API",
          "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/users-chai-should.spec.js",
          "file": "/test/users-chai-should.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Users API \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester = chai.request(app).keepOpen();",
              "err": {},
              "uuid": "4bcf910a-cc61-41ae-9686-31c20d890269",
              "parentUUID": "9531e2b8-eaa2-4c7c-a4bf-327a6c1f4a6e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Users API \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester.close();",
              "err": {},
              "uuid": "d69a1a43-a601-4a41-8696-d63569af4baa",
              "parentUUID": "9531e2b8-eaa2-4c7c-a4bf-327a6c1f4a6e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5411e1c5-df72-432f-8996-a9fec33bbbca",
              "title": "GET /api/users",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/users-chai-should.spec.js",
              "file": "/test/users-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET all the users",
                  "fullTitle": "Users API GET /api/users it should GET all the users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "requester\n    .get(\"/api/users\")\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('array');\n        res.body.length.should.be.above(1);\n        done();\n    });",
                  "err": {},
                  "uuid": "1a265dae-2db3-4073-8a51-ef9b4f98638e",
                  "parentUUID": "5411e1c5-df72-432f-8996-a9fec33bbbca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not GET all the users",
                  "fullTitle": "Users API GET /api/users it should not GET all the users",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "requester\n    .get(\"/api/user\")\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({});\n        done();\n    });",
                  "err": {},
                  "uuid": "aa636369-6b64-4f70-8027-25a893b4ad69",
                  "parentUUID": "5411e1c5-df72-432f-8996-a9fec33bbbca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a265dae-2db3-4073-8a51-ef9b4f98638e",
                "aa636369-6b64-4f70-8027-25a893b4ad69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d36c2bad-1a72-47fe-a1e9-544923513e50",
              "title": "POST /api/users",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/users-chai-should.spec.js",
              "file": "/test/users-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST a new user",
                  "fullTitle": "Users API POST /api/users it should POST a new user",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n    // id: 1,\n    firstName: \"Taner\",\n    lastName: \"Yildirim\",\n    mail: \"ty@hotmail.com\",\n    userName: \"taneryildirim\",\n    password: \"383843\"\n};\nrequester\n    .post(\"/api/users\")\n    .send(user)\n    .end((err, res) => {\n        res.should.have.status(201);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').above(1);\n        res.body.should.have.property('firstName');\n        res.body.should.have.property('lastName');\n        res.body.should.have.property('mail');\n        res.body.should.have.property('userName');\n        res.body.should.have.property('password');\n        requester\n            .get(`/api/users/${res.body.id}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal(res.body);\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "ea603f25-062b-4cc6-b2e4-2835c68ccc52",
                  "parentUUID": "d36c2bad-1a72-47fe-a1e9-544923513e50",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a new user without password field",
                  "fullTitle": "Users API POST /api/users it should NOT POST a new user without password field",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n    // id: 1,\n    firstName: \"Taner\",\n    lastName: \"Yildirim\",\n    mail: \"ty@hotmail.com\",\n    userName: \"taneryildirim\"\n};\nrequester\n    .post(\"/api/users\")\n    .send(user)\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.text.should.be.equal(`\"password\" is required`)\n        done();\n    });",
                  "err": {},
                  "uuid": "0b7085ec-e92f-4d9f-80c7-07efaa6ce920",
                  "parentUUID": "d36c2bad-1a72-47fe-a1e9-544923513e50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea603f25-062b-4cc6-b2e4-2835c68ccc52",
                "0b7085ec-e92f-4d9f-80c7-07efaa6ce920"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a5f9649e-6390-4aed-86e8-8e810805faa1",
              "title": "GET /api/users/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/users-chai-should.spec.js",
              "file": "/test/users-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET a user by the given id",
                  "fullTitle": "Users API GET /api/users/:id it should GET a user by the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userId = 1;\nrequester\n    .get(`/api/users/${userId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('id').eql(userId);\n        res.body.should.have.property('firstName');\n        res.body.should.have.property('lastName');\n        res.body.should.have.property('mail');\n        res.body.should.have.property('userName');\n        res.body.should.have.property('password');\n        done();\n    });",
                  "err": {},
                  "uuid": "f13819c6-ae62-428b-af95-cba941a59120",
                  "parentUUID": "a5f9649e-6390-4aed-86e8-8e810805faa1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT GET a user by the given id",
                  "fullTitle": "Users API GET /api/users/:id it should NOT GET a user by the given id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userId = 38;\nrequester\n    .get(`/api/users/${userId}`)\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        done();\n    });",
                  "err": {},
                  "uuid": "c35128d9-6eba-4c1a-a9ac-55b42d32151b",
                  "parentUUID": "a5f9649e-6390-4aed-86e8-8e810805faa1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f13819c6-ae62-428b-af95-cba941a59120",
                "c35128d9-6eba-4c1a-a9ac-55b42d32151b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8d65cd46-8821-45dd-a362-499905eb8541",
              "title": "PUT /api/users/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/users-chai-should.spec.js",
              "file": "/test/users-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should REPLACE a user given the id",
                  "fullTitle": "Users API PUT /api/users/:id it should REPLACE a user given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userId = 1;\nconst user = {\n    // id: 1,\n    firstName: \"Hakki\",\n    lastName: \"Cloud\",\n    mail: \"hc@hotmail.com\",\n    userName: \"hakkicloud\",\n    password: \"883322\"\n};\nrequester\n    .put(`/api/users/${userId}`)\n    .send(user)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.deep.equal({ id: userId, ...user });\n        requester\n            .get(`/api/users/${userId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(200);\n                res2.body.should.be.a('object');\n                res2.body.should.deep.equal({ id: userId, ...res.body });\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "7d2fcad2-94b0-4ec9-9940-a41f39b7dc37",
                  "parentUUID": "8d65cd46-8821-45dd-a362-499905eb8541",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d2fcad2-94b0-4ec9-9940-a41f39b7dc37"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d0cfbca4-8a16-43ac-a80e-37754352b190",
              "title": "DELETE /api/users/:id",
              "fullFile": "/Users/kenanhancer/Documents/Projects/kenanhancer_github/nodejs-projects-kenanhancer/express-demo/test/users-chai-should.spec.js",
              "file": "/test/users-chai-should.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should DELETE a user given the id",
                  "fullTitle": "Users API DELETE /api/users/:id it should DELETE a user given the id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userId = 1;\nrequester\n    .delete(`/api/users/${userId}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a(\"object\");\n        requester\n            .get(`/api/users/${userId}`)\n            .end((err2, res2) => {\n                res2.should.have.status(404);\n                done();\n            });\n    });",
                  "err": {},
                  "uuid": "7121fe3d-148f-4afd-af67-d80df746f012",
                  "parentUUID": "d0cfbca4-8a16-43ac-a80e-37754352b190",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7121fe3d-148f-4afd-af67-d80df746f012"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "./test/reports/mochawesome-report"
      },
      "version": "5.1.0"
    }
  }
}