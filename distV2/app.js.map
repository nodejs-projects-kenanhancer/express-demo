{"version":3,"sources":["../srcV2/app.js"],"names":["app","port","process","env","PORT","use","bodyParser","json","express","urlencoded","extended","__dirname","req","res","next","context","models","me","users","routes","session","user","message","listen","console","log"],"mappings":"kGAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,uBAAR,E,CAAiB;AACjBL,GAAG,CAACK,GAAJ,CAAQ,yBAAR,E,CAAmB;AACnBL,GAAG,CAACK,GAAJ,CAAQC,uBAAWC,IAAX,EAAR,E,CAA4B;AAC5BP,GAAG,CAACK,GAAJ,CAAQ,wBAAO,UAAP,CAAR,E,CAA6B;AAC7BL,GAAG,CAACK,GAAJ,CAAQG,oBAAQD,IAAR,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQG,oBAAQC,UAAR,CAAmB,EAACC,QAAQ,EAAE,IAAX,EAAnB,CAAR;AACAV,GAAG,CAACK,GAAJ,CAAQG,8BAAeG,SAAS,GAAG,YAA3B,CAAR;;AAEAX,GAAG,CAACK,GAAJ,CAAQ,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBF,EAAAA,GAAG,CAACG,OAAJ,GAAc;AACVC,IAAAA,MAAM,EAANA,kBADU;AAEVC,IAAAA,EAAE,EAAED,mBAAOE,KAAP,CAAa,CAAb,CAFM,EAAd;;;AAKAJ,EAAAA,IAAI;AACP,CAPD;;AASAd,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoBc,mBAAOC,OAA3B;AACApB,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBc,mBAAOE,IAAzB;AACArB,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAqBc,mBAAOG,OAA5B;;AAEAtB,GAAG,CAACuB,MAAJ,CAAWtB,IAAX,EAAiB,YAAM;AACnBuB,EAAAA,OAAO,CAACC,GAAR,yCAA6CxB,IAA7C;AACH,CAFD","sourcesContent":["import 'dotenv/config';\nimport express from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\nimport routes from './routes';\nimport models from './models';\n\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(cors()); // enabling CORS(Cross-origin resource sharing) for all requests\napp.use(helmet()); // adding Helmet to enhance your API's security\napp.use(bodyParser.json()); // using bodyParser to parse JSON bodies into JS objects\napp.use(morgan('combined')); // adding morgan to log HTTP requests\napp.use(express.json());\napp.use(express.urlencoded({extended: true}));\napp.use(express.static(__dirname + '/resources'));\n\napp.use((req, res, next) => {\n    req.context = {\n        models,\n        me: models.users[1]\n    };\n\n    next();\n});\n\napp.use('/session', routes.session);\napp.use('/users', routes.user);\napp.use('/messages', routes.message);\n\napp.listen(port, () => {\n    console.log(`Listening at http://localhost:${port}`);\n})"],"file":"app.js"}